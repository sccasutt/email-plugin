The Thunderbird plugin will be written in JavaScript, as Thunderbird plugins are typically written in this language. The plugin will use the OpenAI GPT API to generate responses to emails. The plugin will also use the Thunderbird API to interact with the email client.

Here are the core classes, functions, and methods that will be necessary:

1. `EmailResponseGenerator`: This class will handle the generation of email responses. It will have the following methods:
    - `getPreviousEmails`: This method will retrieve previous emails from the same sender.
    - `generateResponse`: This method will generate a response to an email using the OpenAI GPT API.
2. `EmailSender`: This class will handle sending emails. It will have the following methods:
    - `composeEmail`: This method will compose an email with the recipient and response pre-filled.
    - `sendEmail`: This method will send the composed email.
3. `PluginUI`: This class will handle the user interface of the plugin. It will have the following methods:
    - `showResponseButton`: This method will display the "Generate Response" button.
    - `showToneSelection`: This method will display the options for selecting the tone of the response.
    - `showInformationInput`: This method will display a textbox for the user to input any specific information to be included in the response.

Now, let's write the code for each file.

`email_response_generator.js`
```javascript
const openai = require('openai');

class EmailResponseGenerator {
  constructor(apiKey) {
    this.api = openai(apiKey);
  }

  async getPreviousEmails(sender) {
    // Use Thunderbird API to get previous emails from the same sender
  }

  async generateResponse(email, tone, information) {
    const prompt = this.createPrompt(email, tone, information);
    const response = await this.api.Completion.create({
      engine: 'davinci',
      prompt: prompt,
      max_tokens: 150
    });
    return response.choices[0].text;
  }

  createPrompt(email, tone, information) {
    // Create a prompt for the OpenAI GPT API based on the email, tone, and information
  }
}

module.exports = EmailResponseGenerator;
```

`email_sender.js`
```javascript
class EmailSender {
  constructor() {
    // Initialize Thunderbird API
  }

  composeEmail(recipient, response) {
    // Use Thunderbird API to compose an email with the recipient and response pre-filled
  }

  sendEmail() {
    // Use Thunderbird API to send the composed email
  }
}

module.exports = EmailSender;
```

`plugin_ui.js`
```javascript
class PluginUI {
  constructor() {
    // Initialize Thunderbird API
  }

  showResponseButton() {
    // Use Thunderbird API to display the "Generate Response" button
  }

  showToneSelection() {
    // Use Thunderbird API to display the options for selecting the tone of the response
  }

  showInformationInput() {
    // Use Thunderbird API to display a textbox for the user to input any specific information to be included in the response
  }
}

module.exports = PluginUI;
```

`main.js`
```javascript
const EmailResponseGenerator = require('./email_response_generator');
const EmailSender = require('./email_sender');
const PluginUI = require('./plugin_ui');

const responseGenerator = new EmailResponseGenerator('your-openai-api-key');
const emailSender = new EmailSender();
const ui = new PluginUI();

ui.showResponseButton();
ui.showToneSelection();
ui.showInformationInput();

// Add event listeners for the "Generate Response" button, tone selection, and information input
```

`package.json`
```json
{
  "name": "thunderbird-email-response-generator",
  "version": "1.0.0",
  "description": "A Thunderbird plugin that generates responses to emails using the OpenAI GPT API.",
  "main": "main.js",
  "scripts": {
    "start": "node main.js"
  },
  "dependencies": {
    "openai": "^0.0.3"
  }
}
```

Please note that the Thunderbird API is not included in the code because it is not available as a Node.js package. The Thunderbird API is available to Thunderbird plugins and is used to interact with the email client. The code for using the Thunderbird API will depend on the specific version of Thunderbird and the specific functionalities of the API.